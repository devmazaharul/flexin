
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Prisma schema for User model
model User {
  id        String   @id @default(cuid()) 
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  orders    Order[]  
  isVerified   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

model Product {
  id          String           @id @default(uuid())
  name        String
  slug        String? @unique
  description String
  price       Float
  stock       Int
  imageUrl    String
  categoryId  String
  category    Category         @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
  attributes  ProductAttribute[]
  isActive    Boolean          @default(true)
  isFeatured  Boolean          @default(false)
  discount    Float            @default(0)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model ProductAttribute {
  id        String   @id @default(uuid())
  key       String   // e.g. "color", "size", "volume", "skinType"
  value     String   // e.g. "blue", "XL", "200ml", "oily"
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}



//prisma schema for Order model
model Order {
  id        String   @id @default(cuid())
  orderID   String?  @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  total     Float
  status    OrderStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  OrderItems OrderItem[]
  Payments Payment?
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}


//  Prisma schema for OrderItem model
model OrderItem {
  id         String   @id @default(uuid())
  quantity   Int
  price      Float
  orderId    String
  order      Order    @relation(fields: [orderId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}


// Prisma schema for Payment model
enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}
enum PaymentMethod {
  CASH_ON_DELIVERY
  BKASH
  NAGAD
  MAZAPAY
}

model Payment {
  id             String        @id @default(uuid())
  orderId        String     @unique
  amount         Float
  paymentMethod  PaymentMethod @default(CASH_ON_DELIVERY)
  status         PaymentStatus @default(PENDING)
  transactionId  String @unique
  order          Order         @relation(fields: [orderId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}